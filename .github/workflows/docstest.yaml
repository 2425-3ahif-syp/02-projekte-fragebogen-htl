name: Documentation Build & Deploy

on:
  push:
    branches:
      - 'main'
    paths:
      - asciidocs/**
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build & Deploy Docs ðŸ“š
    runs-on: ubuntu-latest
    env:
      INPUTPATH: asciidocs
      BRANCH: gh-pages
    steps:
      - uses: actions/checkout@v4

      - name: Ensure all .sh files are executable
        run: |
          find . -name "*.sh" -exec chmod +x {} \;

      # Setup directories for all document types
      - name: Create output directories
        run: |
          mkdir -p ${{ env.INPUTPATH }}/docs/wireframe/images
          mkdir -p ${{ env.INPUTPATH }}/docs/pflichtenheft/images
          mkdir -p ${{ env.INPUTPATH }}/docs/projektauftrag/images
          mkdir -p ${{ env.INPUTPATH }}/slides/images

      # Copy images to all document directories
      - name: Copy images to document directories
        run: |
          # Copy images to wireframe
          cp -R ${{ env.INPUTPATH }}/docs/images/* ${{ env.INPUTPATH }}/docs/wireframe/images/ || true
          
          # Copy images to pflichtenheft
          cp -R ${{ env.INPUTPATH }}/images/* ${{ env.INPUTPATH }}/docs/pflichtenheft/images/ || true
          cp -R ${{ env.INPUTPATH }}/docs/images/* ${{ env.INPUTPATH }}/docs/pflichtenheft/images/ || true
          
          # Copy images to projektauftrag
          cp -R ${{ env.INPUTPATH }}/images/* ${{ env.INPUTPATH }}/docs/projektauftrag/images/ || true
          cp -R ${{ env.INPUTPATH }}/docs/images/* ${{ env.INPUTPATH }}/docs/projektauftrag/images/ || true
          
          # Copy images to slides
          cp -R ${{ env.INPUTPATH }}/images/* ${{ env.INPUTPATH }}/slides/images/ || true

      # Run docker-convert.sh with environment variables for document-specific configurations
      - name: Run docker conversion script
        run: |
          # Create configuration file with document-specific settings
          cat > ${{ env.INPUTPATH }}/scripts/config.env << EOF
          # Wireframe config
          WIREFRAME_OPTIONS="-r asciidoctor-diagram -a icons=font -a experimental=true -a source-highlighter=rouge -a rouge-theme=github -a rouge-linenums-mode=inline -a docinfo=shared -a imagesdir=images -a toc=left -a toclevels=2 -a sectanchors=true -a sectnums=true -a favicon=themes/favicon.png -a sourcedir=src/main/java -b html5"
          
          # Pflichtenheft config
          PFLICHTENHEFT_OPTIONS="-r asciidoctor-diagram -a icons=font -a experimental=true -a source-highlighter=rouge -a imagesdir=images -a toc=left -b html5"
          
          # Projektauftrag config
          PROJEKTAUFTRAG_OPTIONS="-r asciidoctor-diagram -a icons=font -a experimental=true -a source-highlighter=rouge -a imagesdir=images -a toc=left -b html5"
          
          # Slides config
          SLIDES_OPTIONS="-a revealjsdir=https://cdn.jsdelivr.net/npm/reveal.js@4.1.2 -a revealjs_theme=white -a revealjs_transition=slide -a revealjs_history=true -a source-highlighter=rouge -a imagesdir=images"
          EOF
          
          # Run the docker conversion script with the input path
          sudo ${{ env.INPUTPATH }}/scripts/docker-convert.sh ${{ env.INPUTPATH }}
          
          # Display directory tree for debugging
          tree

      # Deploy all documentation to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: ${{ env.BRANCH }}
          folder: ${{ env.INPUTPATH }}
          clean: true